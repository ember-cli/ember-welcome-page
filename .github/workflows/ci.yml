name: CI

on:
  push:
    branches:
      - main
      - 'v*' # prior release branches (e.g. `v0.30.x` branch)
    tags:
      - 'v*'
  pull_request:

env:
  NODE_VERSION: 16

jobs:
  lint:
    name: Lint files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint


  test:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test
        run: yarn test


  try-scenarios:
    name: ${{ matrix.try-scenario }}
    needs: [lint, test]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-lts-4.8
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test
        run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
        working-directory: test-app


  publish:
    name: Publish to npm
    needs: [lint, test, try-scenarios]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run auto-dist-tag
        run: npx auto-dist-tag@1 --write
        working-directory: ember-welcome-page

      - name: Publish
        run: npm publish
        working-directory: ember-welcome-page
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
