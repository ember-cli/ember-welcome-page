name: Node CI

on:
  push:
    branches:
      - main
      - 'v*' # prior release branches (e.g. `v0.30.x` branch)
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - name: lint
        run: yarn lint
      - name: test
        run: yarn test:ember
      - id: set-matrix
        run: echo "::set-output name=matrix::$(yarn --silent scenario-tester list --files ./scenarios.js --matrix 'yarn qunit ./scenarios.js --filter %s:')"
        working-directory: test-app

  compat-scenarios:
    needs: test
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.test.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --no-lockfile
      - name: test
        run: ${{ matrix.command }}
        working-directory: test-app
  publish:
    name: Publish to npm
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test, compat-scenarios]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version: 14.x
          registry-url: 'https://registry.npmjs.org'

      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: auto-dist-tag
        run: npx auto-dist-tag@1 --write

      - name: publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
